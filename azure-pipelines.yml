# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Install-Module -Name Az -AllowClobber -Scope CurrentUser -Force
      $tenantId = (Get-AzContext).Tenant.Id
      #$sp.ApplicationId = '6a9d59a2-42b9-496f-b6e4-4ec3c2942ae6'
      #$sp.Secret

      $userPassword = "Seet3z~DELAA__2siBl46We-n_zS9M_JUL"
      $userPassword = ConvertTo-SecureString -String $userPassword -AsPlainText -Force

      $pscredential = New-Object -TypeName System.Management.Automation.PSCredential('6a9d59a2-42b9-496f-b6e4-4ec3c2942ae6', )
      Connect-AzAccount -ServicePrincipal -Credential $pscredential -Tenant $tenantId

      git config --global user.email "t-aksh@microsoft.com"
      git config --global user.name "Akash Sharma"
      $contents = Get-Content -Raw -Path CreateWebApp/Config.json | ConvertFrom-Json
      $ARMtemplate = Get-Content -Raw -Path CreateWebApp/ADFTutorialARM.json | ConvertFrom-Json
      $ARMParameters = Get-Content -Raw -Path CreateWebApp/ADFTutorialARM-Parameters.json | ConvertFrom-Json

      $DataFactoryPipeline = @"
      {
        "name": "PushedPipeline",
        "type": "Microsoft.DataFactory/factories/pipelines"
      }
      "@
      
      $contents[0].resources[0].EndPoint = "Changed EndPoint"
      $contents | ConvertTo-Json | set-content CreateWebApp/Config.json
      #$ARMtemplate.resources += (ConvertFrom-Json -InputObject $DataFactoryPipeline)

      New-AzResourceGroupDeployment -Name MyARMDeployment -ResourceGroupName Intern_Akash_RG -TemplateFile CreateWebApp/ADFTutorialARM.json -TemplateParameterFile CreateWebApp/ADFTutorialARM-Parameters.json
